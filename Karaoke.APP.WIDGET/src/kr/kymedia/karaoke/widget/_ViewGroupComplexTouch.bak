/*
 * Copyright 2011 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 2012 All rights (c)KYGroup Co.,Ltd. reserved.
 * 
 * This software is the confidential and proprietary information
 *  of (c)KYGroup Co.,Ltd. ("Confidential Information").
 * 
 * project	:	Karaoke.KPOP
 * filename	:	ViewGroupComplexTouch.java
 * author	:	isyoon
 *
 * <pre>
 * kr.kymedia.karaoke.kpop.widget
 *    |_ ViewGroupComplexTouch.java
 * </pre>
 * 
 */

package kr.kymedia.karaoke.widget;

import android.content.Context;
import android.util.AttributeSet;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;

/**
 * 
 * TODO<br>
 * NOTE:<br>
 * 
 * @author isyoon
 * @since 2013. 6. 5.
 * @version 1.0
 */
@Deprecated
public class _ViewGroupComplexTouch extends ViewGroup implements View.OnTouchListener {
	String __CLASSNAME__ = (new Exception()).getStackTrace()[0].getFileName();

	protected String getMethodName() {
		String name = Thread.currentThread().getStackTrace()[3].getMethodName();
		String text = String.format("%s() ", name);
		// int line = Thread.currentThread().getStackTrace()[3].getLineNumber();
		// text = String.format("line:%d - %s() ", line, name);
		return text;
	}

	public _ViewGroupComplexTouch(Context context) {
		super(context);
		// TODO Auto-generated constructor stub
	}

	/**
	 * <pre>
	 * TODO
	 * </pre>
	 * 
	 * @param context
	 * @param attrs
	 * @param defStyle
	 */
	public _ViewGroupComplexTouch(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
		// TODO Auto-generated constructor stub
	}

	/**
	 * <pre>
	 * TODO
	 * </pre>
	 * 
	 * @param context
	 * @param attrs
	 */
	public _ViewGroupComplexTouch(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub
	}

	@Override
	protected void onLayout(boolean changed, int l, int t, int r, int b) {


	}

	OnComplexTouchListener listener;

	/**
	 * <pre>
	 * TODO
	 * </pre>
	 * 
	 * @see android.view.View#setOnTouchListener(android.view.View.OnTouchListener)
	 */
	@Override
	public void setOnTouchListener(View.OnTouchListener l) {

		// super.setOnTouchListener(l);
		if (listener == null) {
			listener = new OnComplexTouchListener();
		}
		for (int i = 0; i < getChildCount(); i++) {
			listener.add(getChildAt(i));
		}
		listener.setOnTouchListener(l);
	}

	public void setPressed(boolean pressed) {
		this.setPressed(pressed);
	}

	@Override
	public boolean onTouch(View v, MotionEvent event) {
		String vn = v.getContext().getResources().getResourceEntryName(v.getId());
		String cn = v.getClass().getSimpleName();
		Log.e(__CLASSNAME__, getMethodName() + vn + ", " + cn + "\n" + event);

		switch (event.getAction()) {
		case MotionEvent.ACTION_DOWN:
			setPressed(true);
			break;

		case MotionEvent.ACTION_MOVE:
			break;

		case MotionEvent.ACTION_UP:
		default:
			setPressed(false);
			break;
		}

		return false;
	}
}
