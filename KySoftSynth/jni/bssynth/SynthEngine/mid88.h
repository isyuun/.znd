/*
 *  mid88.h
 *
 *  Copyright (c) 1999 - 2012 bismark. All rights reserved.
 *
 */

/* */

/*
modification history
--------------------
*/

/* DESCRIPTION */

#ifndef __INCmid88h
#define __INCmid88h

/* defines */

enum {
	kMid88Ports = 2, /* number of midi ports */

	kMid88ModuleA = 0, /* modules */
	kMid88ModuleB,
	kMid88Modules,

	kMid88Parts = 16, /* parts / module */
	kMid88Maps = 2, /* drum maps / module */

	/* system mode set */
	kMid88Mode1 = 0, /* mode1 */
	kMid88Mode2, /* mode2 */

	kMid88Off = 0,
	kMid88On,

	/* drum set map */
	kMid88Map1 = 1, /* map1 */
	kMid88Map2, /* map2 */

	kMid88Single = 0,
	kMid88LimitedMulti,
	kMid88FullMulti,

	/* tone map/-0 number */
	kMid88Selected = 0,
	kMid88Sc55Map,
	kMid88Sc88Map,
	kMid88Sc88ProMap,
	kMid88Sc8850Map,

	kMid88Mono = 0,
	kMid88Poly,

	kMid88DevIdDefault = 0x10,

	/* sysex IDs */
	kMid88SyxIdGs = 0x42, /* model = gs */
	kMid88SyxIdGs2 = 0x45, /* model = gs */
	kMid88SyxIdRq1 = 0x11, /* command = data request 1 */
	kMid88SyxIdDt1 = 0x12, /* command = data set 1 */

	/* control change defaults */
	kMid88CdefBankSelM = 0x00, /* bank select msb */
	kMid88CdefModulation = 0x00, /* modulation */
	kMid88CdefPortaTime = 0x00, /* portamento time */
	kMid88CdefVolume = 0x64, /* volume */
	kMid88CdefPanpot = 0x40, /* panpot */
	kMid88CdefExpression = 0x7F, /* expression */
	kMid88CdefBankSelL = kMid88Selected, /* bank select lsb */
	kMid88CdefHold1 = 0x00, /* hold 1 ? */
	kMid88CdefPortamento = 0x7F, /* portamento ? */
	kMid88CdefSostenuto = 0x00, /* sostenuto ? */
	kMid88CdefSoft = 0x00, /* soft ? */
	kMid88CdefPortaCtrl = 0xFF, /* portamento control */
	kMid88CdefEffect1 = 0x28, /* general effect 1 */
	kMid88CdefEffect3 = 0x00, /* general effect 3 */
	kMid88CdefEffect4 = 0x00, /* general effect 4 */
	
	/* rpn defaults */
	kMid88RdefPBSense = 0x02, /* pitch bend sensitivity */
	kMid88RdefMstFineTune = 0x2000, /* master fine tuning */
	kMid88RdefMstCorsTune = 0x40, /* master coarse tuning */
	
	/* nrpn numbers */
	kMid88NmsbVibRate = 0x01, /* vibrato rate */
	kMid88NlsbVibRate = 0x08,
	kMid88NnumVibRate = (kMid88NmsbVibRate << 8 | kMid88NlsbVibRate),
	
	kMid88NmsbVibDepth = 0x01, /* vibrato depth */
	kMid88NlsbVibDepth = 0x09,
	kMid88NnumVibDepth = (kMid88NmsbVibDepth << 8 | kMid88NlsbVibDepth),
	
	kMid88NmsbVibDly = 0x01, /* vibrato delay */
	kMid88NlsbVibDly = 0x0A,
	kMid88NnumVibDly = (kMid88NmsbVibDly << 8 | kMid88NlsbVibDly),
	
	kMid88NmsbTvfCutoffFreq = 0x01, /* tvf cutoff frequency */
	kMid88NlsbTvfCutoffFreq = 0x20,
	kMid88NnumTvfCutoffFreq = (kMid88NmsbTvfCutoffFreq << 8 | kMid88NlsbTvfCutoffFreq),
	
	kMid88NmsbTvfReso = 0x01, /* tvf resonance */
	kMid88NlsbTvfReso = 0x21,
	kMid88NnumTvfReso = (kMid88NmsbTvfReso << 8 | kMid88NlsbTvfReso),
	
	kMid88NmsbEnvAtkTime = 0x01, /* tvf&tva env.attack time */
	kMid88NlsbEnvAtkTime = 0x63,
	kMid88NnumEnvAtkTime = (kMid88NmsbEnvAtkTime << 8 | kMid88NlsbEnvAtkTime),
	
	kMid88NmsbEnvDcyTime = 0x01, /* tvf&tva env.decay time */
	kMid88NlsbEnvDcyTime = 0x64,
	kMid88NnumEnvDcyTime = (kMid88NmsbEnvDcyTime << 8 | kMid88NlsbEnvDcyTime),
	
	kMid88NmsbEnvRelTime = 0x01, /* tvf&tva Env.release time */
	kMid88NlsbEnvRelTime = 0x66,
	kMid88NnumEnvRelTime = (kMid88NmsbEnvRelTime << 8 | kMid88NlsbEnvRelTime),
	
	kMid88NmsbDIPitchCoarse = 0x18, /* drum inst pitch coarse */
	kMid88NnumDIPitchCoarse = (kMid88NmsbDIPitchCoarse << 8),
	
	kMid88NmsbDITvaLevel = 0x1A, /* drum inst tva level */
	kMid88NnumDITvaLevel = (kMid88NmsbDITvaLevel << 8),
	
	kMid88NmsbDIPanpot = 0x1C, /* drum inst panpot */
	kMid88NnumDIPanpot = (kMid88NmsbDIPanpot << 8),
	
	kMid88NmsbDIRevSendLvl = 0x1D, /* drum inst rev send level */
	kMid88NnumDIRevSendLvl = (kMid88NmsbDIRevSendLvl << 8),
	
	kMid88NmsbDIChoSendLvl = 0x1E, /* drum inst cho send level */
	kMid88NnumDIChoSendLvl = (kMid88NmsbDIChoSendLvl << 8),
	
	kMid88NmsbDIDlySendLvl = 0x1F, /* drum inst dly send level */
	kMid88NnumDIDlySendLvl = (kMid88NmsbDIDlySendLvl << 8),
	
	kMid88NmsbDIPanpotJvc = 0x7C, /* drum inst panpot (jvc) */
	kMid88NnumDIPanpotJvc = (kMid88NmsbDIPanpotJvc << 8),
	
	/* nrpn defaults */
	kMid88NdefVibRate = 0x40, /* vibrato rate */
	kMid88NdefVibDepth = 0x40, /* vibrato depth */
	kMid88NdefVibDelay = 0x40, /* vibrato delay */
	kMid88NdefTvfCutoffFreq = 0x40, /* tvf cutoff frequency */
	kMid88NdefTvfReso = 0x40, /* tvf resonance */
	kMid88NdefEnvAtkTime = 0x40, /* tvf&tva env.attack time */
	kMid88NdefEnvDcyTime = 0x40, /* tvf&tva env.decay time */
	kMid88NdefEnvRelTime = 0x40, /* tvf&tva env.release time */

	/* sysex values */
	kMid88RevMacroRoom1 = 0, /* reverb macro */
	kMid88RevMacroRoom2,
	kMid88RevMacroRoom3,
	kMid88RevMacroHall1,
	kMid88RevMacroHall2,
	kMid88RevMacroPlate,
	kMid88RevMacroDelay,
	kMid88RevMacroPanningDelay,
	kMid88RevMacros,

	kMid88ChoMacroChorus1 = 0, /* chorus macro */
	kMid88ChoMacroChorus2,
	kMid88ChoMacroChorus3,
	kMid88ChoMacroChorus4,
	kMid88ChoMacroFeedbackChorus,
	kMid88ChoMacroFlanger,
	kMid88ChoMacroShortDelay,
	kMid88ChoMacroShortDelayFb,
	kMid88ChoMacros,
						 
	kMid88DlyMacroDelay1 = 0, /* delay macro */
	kMid88DlyMacroDelay2,
	kMid88DlyMacroDelay3,
	kMid88DlyMacroDelay4,
	kMid88DlyMacroPanDelay1,
	kMid88DlyMacroPanDelay2,
	kMid88DlyMacroPanDelay3,
	kMid88DlyMacroPanDelay4,
	kMid88DlyMacroDlyToRev,
	kMid88DlyMacroPanRepeat,
	kMid88DlyMacros,

	/* sysex addresses */
	kMid88AddrDisplay = 0x00100000, /* display data */
	kMid88AddrSysModeSet = 0x0000007F, /* system mode set */

	kMid88AddrChMsgRxPort = 0x00000100, /* channel msg rx port */

	kMid88AddrVoiceNumReq = 0x000C0070, /* used voice number */

	kMid88AddrPartPanpotJvc = 0x00107700, /* part panpot (jvc) */
	kMid88AddrPanpotJvc = 0x00107000, /* panpot (jvc) */

	kMid88AddrUI = 0x00200000,
	kMid88AddrUISrcMap = 0x00200000, /* dource tone# (map) */
	kMid88AddrUISrcBankM = 0x00200001, /* source tone# (bank msb) */
	kMid88AddrUISrcPrg = 0x00200002, /* source tone# (program) */
	kMid88AddrUIModify1_2 = 0x00200003, /* (vibrato rate) */
	kMid88AddrUIModify2_2 = 0x00200104, /* (vibrato depth) */
	kMid88AddrUIModify3_2 = 0x00200105, /* (tvf cutoff freq) */
	kMid88AddrUIModify4_2 = 0x00200106, /* (tvf resonance) */
	kMid88AddrUIModify5_2 = 0x00200107, /* (tvf&tva env.attack) */
	kMid88AddrUIModify6_2 = 0x00200108, /* (tvf&tva env.decay) */
	kMid88AddrUIModify7_2 = 0x00200109, /* (tvf&tva env.release) */
	kMid88AddrUIModify8_2 = 0x0020010A, /* (vibrato Delay) */

	kMid88AddrUD = 0x00210000,
	kMid88AddrUDSetName = 0x00210000, /* user drum set name */
	kMid88AddrUDPlayNote = 0x00210100, /* play note */
	kMid88AddrUDLevel = 0x00210200, /* level */
	kMid88AddrUDAsgnGrp = 0x00210300, /* assign group */
	kMid88AddrUDPan = 0x00210400, /* pan */
	kMid88AddrUDRevSendLvl = 0x00210500, /* reverb send level */
	kMid88AddrUDChoSendLvl = 0x00210600, /* chorus send level */
	kMid88AddrUDRxNoteOff = 0x00210700, /* rx.note off */
	kMid88AddrUDRxNoteOn = 0x00210800, /* rx.note on */
	kMid88AddrUDDlySendLvl = 0x00210900, /* delay send level */
	kMid88AddrUDSrcMap = 0x00210A00, /* source drum set# (map) */
	kMid88AddrUDSrcSet = 0x00210B00, /* source drum set# (set) */
	kMid88AddrUDSrcNote = 0x00210C00, /* source note number */

	kMid88AddrMstTune = 0x00400000, /* master tune */
	kMid88AddrMstVol = 0x00400004, /* master volume */
	kMid88AddrMstKeyShift = 0x00400005, /* master key shift */
	kMid88AddrMstPan = 0x00400006, /* master pan */
	kMid88AddrModeSet = 0x0040007F, /* mode set */
	kMid88AddrPatchName = 0x00400100, /* patch name */

	kMid88AddrRevMacro = 0x00400130, /* reverb macro */
	kMid88AddrRevChara = 0x00400131, /* reverb character */
	kMid88AddrRevPreLpf = 0x00400132, /* reverb pre-lpf */
	kMid88AddrRevLvl = 0x00400133, /* reverb level */
	kMid88AddrRevTime = 0x00400134, /* reverb time */
	kMid88AddrRevDlyFb = 0x00400135, /* reverb delay feedback */
	kMid88AddrRevPreDlyTime = 0x00400137, /* reverb predelay time */

	kMid88AddrChoMacro = 0x00400138, /* chorus macro */
	kMid88AddrChoPreLpf = 0x00400139, /* chorus pre-lpf */
	kMid88AddrChoLvl = 0x0040013A, /* chorus level */
	kMid88AddrChoFb = 0x0040013B, /* chorus feedback */
	kMid88AddrChoDly = 0x0040013C, /* chorus delay */
	kMid88AddrChoRate = 0x0040013D, /* chorus rate */
	kMid88AddrChoDepth = 0x0040013E, /* chorus depth */
	kMid88AddrChoSendLvlToRev = 0x0040013F, /* chorus send level to rev */
	kMid88AddrChoSendLvlToDly = 0x00400140, /* chorus send level to dly */

	kMid88AddrDlyMacro = 0x00400150, /* delay macro */
	kMid88AddrDlyPreLpf = 0x00400151, /* delay pre-lpf */
	kMid88AddrDlyTimeC = 0x00400152, /* delay time center */
	kMid88AddrDlyTimeRatioL = 0x00400153, /* delay time ratio left */
	kMid88AddrDlyTimeRatioR = 0x00400154, /* delay time ratio right */
	kMid88AddrDlyLvlC = 0x00400155, /* delay level center */
	kMid88AddrDlyLvlL = 0x00400156, /* delay level left */
	kMid88AddrDlyLvlR = 0x00400157, /* delay level right */
	kMid88AddrDlyLvl = 0x00400158, /* delay level */
	kMid88AddrDlyFb = 0x00400159, /* delay feedback */
	kMid88AddrDlySendlvlToRev = 0x0040015A, /* delay send level to rev */

	kMid88AddrEqLowFreq = 0x00400200, /* eq low freq */
	kMid88AddrEqLowGain = 0x00400201, /* eq low gain */
	kMid88AddrEqHighFreq = 0x00400202, /* eq high freq */
	kMid88AddrEqHighGain = 0x00400203, /* eq high gain */

	kMid88AddrToneNumber = 0x00401000, /* tone number */
	kMid88AddrRxCh = 0x00401002, /* rx.channel */
	kMid88AddrRxPitchBend = 0x00401003, /* rx.pitch bend */
	kMid88AddrRxChPress = 0x00401004, /* rx.ch pressure (CAf) */
	kMid88AddrRxProgram = 0x00401005, /* rx.program change */
	kMid88AddrRxControl = 0x00401006, /* rx.control change */
	kMid88AddrRxPolyPress = 0x00401007, /* rx.poly pressure (PAf) */
	kMid88AddrRxNoteMsg = 0x00401008, /* rx.note message */
	kMid88AddrRxRpn = 0x00401009, /* rx.rpn */
	kMid88AddrRxNrpn = 0x0040100A, /* rx.nrpn */

	kMid88AddrRxModulation = 0x0040100B, /* rx.modulation */
	kMid88AddrRxVolume = 0x0040100C, /* rx.volume */
	kMid88AddrRxPanpot = 0x0040100D, /* rx.panpot */
	kMid88AddrRxExpression = 0x0040100E, /* rx.expression */
	kMid88AddrRxHold1 = 0x0040100F, /* rx.hold1 */
	kMid88AddrRxPortamento = 0x00401010, /* rx.portamento */
	kMid88AddrRxSostenuto = 0x00401011, /* rx.sostenuto */
	kMid88AddrRxSoft = 0x00401012, /* rx.soft */

	kMid88AddrMonoPoly = 0x00401013, /* mono/poly mode */
	kMid88AddrAssignMode = 0x00401014, /* assign mode */

	kMid88AddrUseForRhyPart = 0x00401015, /* use for rhythm part */

	kMid88AddrPitchKeyShift = 0x00401016, /* pitch key shift */
	kMid88AddrPitchOffsetFine = 0x00401017, /* pitch offset fine */

	kMid88AddrPartLvl = 0x00401019, /* part level */
	kMid88AddrVeloSnsDepth = 0x0040101A, /* velocity sense depth */
	kMid88AddrVeloSnsOffset = 0x0040101B, /* velocity sense offset */
	kMid88AddrPartPanpot = 0x0040101C, /* part panpot */
	kMid88AddrKeyRangeLo = 0x0040101D, /* keyboard range low */
	kMid88AddrKeyRangeHi = 0x0040101E, /* keyboard range high */
	kMid88AddrCc1CtrlNum = 0x0040101F, /* cc1 controller number */
	kMid88AddrCc2CtrlNum = 0x00401020, /* cc2 controller number */
	kMid88AddrChoSendLvl = 0x00401021, /* chorus send level */
	kMid88AddrRevSendLvl = 0x00401022, /* reverb send level */

	kMid88AddrRxBankSel = 0x00401023, /* rx.bank select */
	kMid88AddrRxBankSelL = 0x00401024, /* rx.bank select LSB */

	kMid88AddrPchFineTune = 0x0040102A, /* pitch fine tune */

	kMid88AddrDlySendLvl = 0x0040102C, /* delay send level */

	kMid88AddrToneModify1 = 0x00401030, /* (vibrato Rate) */
	kMid88AddrToneModify2 = 0x00401031, /* (vibrato Depth) */
	kMid88AddrToneModify3 = 0x00401032, /* (TVF Cutoff Freq) */
	kMid88AddrToneModify4 = 0x00401033, /* (TVF resonance) */
	kMid88AddrToneModify5 = 0x00401034, /* (tvf&tva env.attack) */
	kMid88AddrToneModify6 = 0x00401035, /* (tvf&tva env.decay) */
	kMid88AddrToneModify7 = 0x00401036, /* (tvf&tva env.release) */
	kMid88AddrToneModify8 = 0x00401037, /* (vibrato Delay) */

	kMid88AddrScaleTune = 0x00401040, /* scale tuning */

	kMid88AddrModPch = 0x00402000, /* mod pitch control */
	kMid88AddrModTvfCutoff = 0x00402001, /* mod tvf cutoff control */
	kMid88AddrModAmp = 0x00402002, /* mod amplitude control */
	kMid88AddrModLfo1Rate = 0x00402003, /* mod lfo1 rate control */
	kMid88AddrModLfo1Pch = 0x00402004, /* mod lfo1 pitch control */
	kMid88AddrModLfo1Tvf = 0x00402005, /* mod lfo1 tvf depth */
	kMid88AddrModLfo1Tva = 0x00402006, /* mod lfo1 tva depth */
	kMid88AddrModLfo2Rate = 0x00402007, /* mod lfo2 rate control */
	kMid88AddrModLfo2Pch = 0x00402008, /* mod lfo2 pitch control */
	kMid88AddrModLfo2Tvf = 0x00402009, /* mod lfo2 tvf depth */
	kMid88AddrModLfo2Tva = 0x0040200A, /* mod lfo2 tva depth */

	kMid88AddrBendPch = 0x00402010, /* bend pitch control */
	kMid88AddrBendTvfCutoff = 0x00402011, /* bend tvf cutoff control */
	kMid88AddrBendAmp = 0x00402012, /* bend amplitude control */
	kMid88AddrBendLfo1Rate = 0x00402013, /* bend lfo1 rate control */
	kMid88AddrBendLfo1Pch = 0x00402014, /* bend lfo1 pitch control */
	kMid88AddrBendLfo1Tvf = 0x00402015, /* bend lfo1 tvf depth */
	kMid88AddrBendLfo1Tva = 0x00402016, /* bend lfo1 tva depth */
	kMid88AddrBendLfo2Rate = 0x00402017, /* bend lfo2 rate contro */
	kMid88AddrBendLfo2Pch = 0x00402018, /* bend lfo2 pitch control */
	kMid88AddrBendLfo2Tvf = 0x00402019, /* bend lfo2 tvf depth */
	kMid88AddrBendLfo2Tva = 0x0040201A, /* bend lfo2 tva depth */

	kMid88AddrCAfPch = 0x00402020, /* CAf pitch control */
	kMid88AddrCAfTvfCutoff = 0x00402021, /* CAf tvf cutoff control */
	kMid88AddrCAfAmp = 0x00402022, /* CAf amplitude control */
	kMid88AddrCAfLfo1Rate = 0x00402023, /* CAf lfo1 rate control */
	kMid88AddrCAfLfo1Pch = 0x00402024, /* CAf lfo1 pitch control */
	kMid88AddrCAfLfo1Tvf = 0x00402025, /* CAf lfo1 tvf depth */
	kMid88AddrCAfLfo1Tva = 0x00402026, /* CAf lfo1 tva depth */
	kMid88AddrCAfLfo2Rate = 0x00402027, /* CAf lfo2 rate control */
	kMid88AddrCAfLfo2Pch = 0x00402028, /* CAf lfo2 pitch control */
	kMid88AddrCAfLfo2Tvf = 0x00402029, /* CAf lfo2 tvf depth */
	kMid88AddrCAfLfo2Tva = 0x0040202A, /* CAf lfo2 tva depth */

	kMid88AddrPAfPch = 0x00402030, /* PAf pitch control */
	kMid88AddrPAfTvfCutoff = 0x00402031, /* PAf tvf cutoff control */
	kMid88AddrPAfAmp = 0x00402032, /* PAf amplitude control */
	kMid88AddrPAfLfo1Rate = 0x00402033, /* PAf lfo1 rate control */
	kMid88AddrPAfLfo1Pch = 0x00402034, /* PAf lfo1 pitch control */
	kMid88AddrPAfLfo1Tvf = 0x00402035, /* PAf lfo1 tvf depth */
	kMid88AddrPAfLfo1Tva = 0x00402036, /* PAf lfo1 tva depth */
	kMid88AddrPAfLfo2Rate = 0x00402037, /* PAf lfo2 rate control */
	kMid88AddrPAfLfo2Pch = 0x00402038, /* PAf lfo2 pitch control */
	kMid88AddrPAfLfo2Tvf = 0x00402039, /* PAf lfo2 tvf depth */
	kMid88AddrPAfLfo2Tva = 0x0040203A, /* PAf lfo2 tva depth */

	kMid88AddrCc1Pch = 0x00402040, /* cc1 pitch control */
	kMid88AddrCc1TvfCutoff = 0x00402041, /* cc1 tvf cutoff control */
	kMid88AddrCc1Amp = 0x00402042, /* cc1 amplitude control */
	kMid88AddrCc1Lfo1Rate = 0x00402043, /* cc1 lfo1 rate control */
	kMid88AddrCc1Lfo1Pch = 0x00402044, /* cc1 lfo1 pitch control */
	kMid88AddrCc1Lfo1Tvf = 0x00402045, /* cc1 lfo1 tvf depth */
	kMid88AddrCc1Lfo1Tva = 0x00402046, /* cc1 lfo1 tva depth */
	kMid88AddrCc1Lfo2Rate = 0x00402047, /* cc1 lfo2 rate control */
	kMid88AddrCc1Lfo2Pch = 0x00402048, /* cc1 lfo2 pitch control */
	kMid88AddrCc1Lfo2Tvf = 0x00402049, /* cc1 lfo2 tvf depth */
	kMid88AddrCc1Lfo2Tva = 0x0040204A, /* cc1 lfo2 tva depth */

	kMid88AddrCc2Pch = 0x00402050, /* cc2 pitch control */
	kMid88AddrCc2TvfCutoff = 0x00402051, /* cc2 tvf cutoff control */
	kMid88AddrCc2Amp = 0x00402052, /* cc2 amplitude control */
	kMid88AddrCc2Lfo1Rate = 0x00402053, /* cc2 lfo1 rate control */
	kMid88AddrCc2Lfo1Pch = 0x00402054, /* cc2 lfo1 pitch control */
	kMid88AddrCc2Lfo1Tvf = 0x00402055, /* cc2 lfo1 tvf depth */
	kMid88AddrCc2Lfo1Tva = 0x00402056, /* cc2 lfo1 tva depth */
	kMid88AddrCc2Lfo2Rate = 0x00402057, /* cc2 lfo2 rate control */
	kMid88AddrCc2Lfo2Pch = 0x00402058, /* cc2 lfo2 pitch control */
	kMid88AddrCc2Lfo2Tvf = 0x00402059, /* cc2 lfo2 tvf depth */
	kMid88AddrCc2Lfo2Tva = 0x0040205A, /* cc2 lfo2 tva depth */

	kMid88AddrSysInfo = 0x00403000, /* system information */

	kMid88AddrToneMapNum = 0x00404000, /* tone map number */

	kMid88AddrToneMap0Num = 0x00404001, /* tone map-0 number */

	kMid88AddrEqOnOff = 0x00404020, /* eq on/off */

	kMid88AddrDrumMapName = 0x00410000, /* drum map name */
	kMid88AddrPlayNoteNum = 0x00410100, /* play note number */
	kMid88AddrLvlD = 0x00410200, /* level */
	kMid88AddrAsgnGrpNum = 0x00410300, /* assign group number */
	kMid88AddrPanpot = 0x00410400, /* panpot */
	kMid88AddrRevSendLvlD = 0x00410500, /* reverb send level */
	kMid88AddrChoSendLvlD = 0x00410600, /* chorus send level */
	kMid88AddrRxNoteOff = 0x00410700, /* rx.note off */
	kMid88AddrRxNoteOn = 0x00410800, /* rx.note on */
	kMid88AddrDlySendLvlD = 0x00410900, /* delay send level */

	/* sysex sizes */
	kMid88SizeSysModeSet = 0x01, /* system mode note on */

	kMid88SizeChMsgRxPort = 0x01, /* channel msg rx port */

	kMid88SizeVoiceNumReq = 0x01, /* used voice number */

	kMid88SizePartPanpotJvc = 0x01, /* part panpot (jvc) */
	kMid88SizePanpotJvc = 0x01, /* panpot (jvc) */

	kMid88SizeUISrcMap = 0x01, /* source tone# (map) */
	kMid88SizeUISrcBankM = 0x01, /* source tone# (bank msb) */
	kMid88SizeUISrcPrg = 0x01, /* source tone# (program) */
	kMid88SizeUIModify1_2 = 0x01, /* (vibrato rate) */
	kMid88SizeUIModify2_2 = 0x01, /* (vibrato depth) */
	kMid88SizeUIModify3_2 = 0x01, /* (tvf cutoff freq) */
	kMid88SizeUIModify4_2 = 0x01, /* (tvf resonance) */
	kMid88SizeUIModify5_2 = 0x01, /* (tvf&tva env.attack) */
	kMid88SizeUIModify6_2 = 0x01, /* (tvf&tva env.decay) */
	kMid88SizeUIModify7_2 = 0x01, /* (tvf&tva env.release) */
	kMid88SizeUIModify8_2 = 0x01, /* (vibrato delay) */

	kMid88SizeUDSetName = 0x0C, /* user drum set name */
	kMid88SizeUDPlayNote = 0x01, /* play note */
	kMid88SizeUDLevel = 0x01, /* level */
	kMid88SizeUDAsgnGrp = 0x01, /* assign group */
	kMid88SizeUDPan = 0x01, /* pan */
	kMid88SizeUDRevSendLvl = 0x01, /* reverb send level */
	kMid88SizeUDChoSendLvl = 0x01, /* chorus send level */
	kMid88SizeUDRxNoteOff = 0x01, /* rx.note off */
	kMid88SizeUDRxNoteOn = 0x01, /* rx.note on */
	kMid88SizeUDDlySendLvl = 0x01, /* delay send level */
	kMid88SizeUDSrcMap = 0x01, /* source drum set# (map) */
	kMid88SizeUDSrcSet = 0x01, /* source drum set# (set) */
	kMid88SizeUDSrcNote = 0x01, /* source note number */

	kMid88SizeMstTune = 0x04, /* master tune */
	kMid88SizeMstVol = 0x01, /* master volume */
	kMid88SizeMstKeyShift = 0x01, /* master key shift */
	kMid88SizeMstPan = 0x01, /* master pan */
	kMid88SizeModeSet = 0x01, /* mode note on */

	kMid88SizePatchName = 0x10, /* patch name */
	kMid88SizeRevMacro = 0x01, /* reverb macro */
	kMid88SizeRevChara = 0x01, /* reverb character */
	kMid88SizeRevPreLpf = 0x01, /* reverb pre-lpf */
	kMid88SizeRevLvl = 0x01, /* reverb level */
	kMid88SizeRevTime = 0x01, /* reverb time */
	kMid88SizeRevDlyFb = 0x01, /* reverb delay feedback */
	kMid88SizeRevPreDlyTime = 0x01, /* reverb predelay time */

	kMid88SizeChoMacro = 0x01, /* chorus macro */
	kMid88SizeChoPreLpf = 0x01, /* chorus pre-lpf */
	kMid88SizeChoLvl = 0x01, /* chorus level */
	kMid88SizeChoFb = 0x01, /* chorus feedback */
	kMid88SizeChoDly = 0x01, /* chorus delay */
	kMid88SizeChoRate = 0x01, /* chorus rate */
	kMid88SizeChoDepth = 0x01, /* chorus depth */
	kMid88SizeChoSendLvlToRev = 0x01, /* chorus send level to rev */
	kMid88SizeChoSendLvlToDly = 0x01, /* chorus send level to dly */

	kMid88SizeDlyMacro = 0x01, /* delay macro */
	kMid88SizeDlyPreLpf = 0x01, /* delay pre-lpf */
	kMid88SizeDlyTimeC = 0x01, /* delay time center */
	kMid88SizeDlyTimeRatioL = 0x01, /* delay time ratio left */
	kMid88SizeDlyTimeRatioR = 0x01, /* delay time ratio right */
	kMid88SizeDlyLvlC = 0x01, /* delay level center */
	kMid88SizeDlyLvlL = 0x01, /* delay level left */
	kMid88SizeDlyLvlR = 0x01, /* delay level right */
	kMid88SizeDlyLvl = 0x01, /* delay level */
	kMid88SizeDlyFb = 0x01, /* delay feedback */
	kMid88SizeDlySendLvlToRev = 0x01, /* delay send level to rev */

	kMid88SizeEqLowFreq = 0x01, /* eq low freq */
	kMid88SizeEqLowGain = 0x01, /* eq low gain */
	kMid88SizeEqHighFreq = 0x01, /* eq high freq */
	kMid88SizeEqHighGain = 0x01, /* eq high gain */

	kMid88SizeToneNumber = 0x02, /* tone number */
	kMid88SizeRxCh = 0x01, /* rx.channel */
	kMid88SizeRxPitchBend = 0x01, /* rx.pitch bend */
	kMid88SizeRxChPress = 0x01, /* rx.ch pressure (CAf) */
	kMid88SizeRxProgram = 0x01, /* rx.program change */
	kMid88SizeRxControl = 0x01, /* rx.control change */
	kMid88SizeRxPolyPress = 0x01, /* rx.poly pressure (PAf) */
	kMid88SizeRxNoteMsg = 0x01, /* rx.note message */
	kMid88SizeRxRpn = 0x01, /* rx.rpn */
	kMid88SizeRxNrpn = 0x01, /* rx.nrpn */

	kMid88SizeRxModulation = 0x01, /* rx.modulation */
	kMid88SizeRxVolume = 0x01, /* rx.volume */
	kMid88SizeRxPanpot = 0x01, /* rx.panpot */
	kMid88SizeRxExpression = 0x01, /* rx.expression */
	kMid88SizeRxHold1 = 0x01, /* rx.hold1 */
	kMid88SizeRxPortamento = 0x01, /* rx.portamento */
	kMid88SizeRxSostenuto = 0x01, /* rx.sostenuto */
	kMid88SizeRxSoft = 0x01, /* rx.soft */

	kMid88SizeMonoPoly = 0x01, /* mono/poly mode */
	kMid88SizeAssignMode = 0x01, /* assign mode */

	kMid88SizeUseForRhyPart = 0x01, /* use for rhythm part */

	kMid88SizePitchKeyShift = 0x01, /* pitch key shift */
	kMid88SizePitchOffsetFine = 0x02, /* pitch offset fine */

	kMid88SizePartLvl = 0x01, /* part level */
	kMid88SizeVeloSnsDepth = 0x01, /* velocity sense depth */
	kMid88SizeVeloSnsOffset = 0x01, /* velocity sense offset */
	kMid88SizePartPanpot = 0x01, /* part panpot */
	kMid88SizeKeyRangeLo = 0x01, /* keyboard range low */
	kMid88SizeKeyRangeHi = 0x01, /* keyboard range high */
	kMid88SizeCc1CtrlNum = 0x01, /* cc1 controller number */
	kMid88SizeCc2CtrlNum = 0x01, /* cc2 controller number */
	kMid88SizeChoSendLvl = 0x01, /* chorus send level */
	kMid88SizeRevSendLvl = 0x01, /* reverb send level */

	kMid88SizeRxBankSel = 0x01, /* rx.bank select */
	kMid88SizeRxBankSelL = 0x01, /* rx.bank select lsb */

	kMid88SizePchFineTune = 0x02, /* pitch fine tune */

	kMid88SizeDlySendLvl = 0x01, /* delay send level */

	kMid88SizeToneModify1 = 0x01, /* (vibrato rate) */
	kMid88SizeToneModify2 = 0x01, /* (vibrato depth) */
	kMid88SizeToneModify3 = 0x01, /* (tvf cutoff freq) */
	kMid88SizeToneModify4 = 0x01, /* (tvf resonance) */
	kMid88SizeToneModify5 = 0x01, /* (tvf&tva env.attack) */
	kMid88SizeToneModify6 = 0x01, /* (tvf&tva env.decay) */
	kMid88SizeToneModify7 = 0x01, /* (tvf&tva env.release) */
	kMid88SizeToneModify8 = 0x01, /* (vibrato delay) */

	kMid88SizeScaleTune = 0x0C, /* scale tuning */

	kMid88SizeModPch = 0x01, /* mod pitch control */
	kMid88SizeModTvfCutoff = 0x01, /* mod tvf cutoff control */
	kMid88SizeModAmp = 0x01, /* mod amplitude control */
	kMid88SizeModLfo1Rate = 0x01, /* mod lfo1 rate control */
	kMid88SizeModLfo1Pch = 0x01, /* mod lfo1 pitch control */
	kMid88SizeModLfo1Tvf = 0x01, /* mod lfo1 tvf depth */
	kMid88SizeModLfo1Tva = 0x01, /* mod lfo1 tva depth */
	kMid88SizeModLfo2Rate = 0x01, /* mod lfo2 rate control */
	kMid88SizeModLfo2Pch = 0x01, /* mod lfo2 pitch control */
	kMid88SizeModLfo2Tvf = 0x01, /* mod lfo2 tvf depth */
	kMid88SizeModLfo2Tva = 0x01, /* mod lfo2 tva depth */

	kMid88SizeBendPch = 0x01, /* bend pitch control */
	kMid88SizeBendTvfCutoff = 0x01, /* bend tvf cutoff control */
	kMid88SizeBendAmp = 0x01, /* bend amplitude control */
	kMid88SizeBendLfo1Rate = 0x01, /* bend lfo1 rate control */
	kMid88SizeBendLfo1Pch = 0x01, /* bend lfo1 pitch control */
	kMid88SizeBendLfo1Tvf = 0x01, /* bend lfo1 tvf depth */
	kMid88SizeBendLfo1Tva = 0x01, /* bend lfo1 tva depth */
	kMid88SizeBendLfo2Rate = 0x01, /* bend lfo2 rate control */
	kMid88SizeBendLfo2Pch = 0x01, /* bend lfo2 pitch control */
	kMid88SizeBendLfo2Tvf = 0x01, /* bend lfo2 tvf depth */
	kMid88SizeBendLfo2Tva = 0x01, /* bend lfo2 tva depth */

	kMid88SizeCAfPch = 0x01, /* CAf pitch control */
	kMid88SizeCAfTvfCutoff = 0x01, /* CAf tvf cutoff control */
	kMid88SizeCAfAmp = 0x01, /* CAf amplitude control */
	kMid88SizeCAfLfo1Rate = 0x01, /* CAf lfo1 rate control */
	kMid88SizeCAfLfo1Pch = 0x01, /* CAf lfo1 pitch control */
	kMid88SizeCAfLfo1Tvf = 0x01, /* CAf lfo1 tvf depth */
	kMid88SizeCAfLfo1Tva = 0x01, /* CAf lfo1 tva depth */
	kMid88SizeCAfLfo2Rate = 0x01, /* CAf lfo2 rate control */
	kMid88SizeCAfLfo2Pch = 0x01, /* CAf lfo2 pitch control */
	kMid88SizeCAfLfo2Tvf = 0x01, /* CAf lfo2 tvf depth */
	kMid88SizeCAfLfo2Tva = 0x01, /* CAf lfo2 tva depth */

	kMid88SizePAfPch = 0x01, /* PAf pitch control */
	kMid88SizePAfTvfCutoff = 0x01, /* PAf tvf cutoff control */
	kMid88SizePAfAmp = 0x01, /* PAf amplitude control */
	kMid88SizePAfLfo1Rate = 0x01, /* PAf lfo1 rate control */
	kMid88SizePAfLfo1Pch = 0x01, /* PAf lfo1 pitch control */
	kMid88SizePAfLfo1Tvf = 0x01, /* PAf lfo1 tvf depth */
	kMid88SizePAfLfo1Tva = 0x01, /* PAf lfo1 tva depth */
	kMid88SizePAfLfo2Rate = 0x01, /* PAf lfo2 rate control */
	kMid88SizePAfLfo2Pch = 0x01, /* PAf lfo2 pitch control */
	kMid88SizePAfLfo2Tvf = 0x01, /* PAf lfo2 tvf depth */
	kMid88SizePAfLfo2Tva = 0x01, /* PAf lfo2 tva depth */

	kMid88SizeCc1Pch = 0x01, /* cc1 pitch control */
	kMid88SizeCc1TvfCutoff = 0x01, /* cc1 tvf cutoff control */
	kMid88SizeCc1Amp = 0x01, /* cc1 amplitude control */
	kMid88SizeCc1Lfo1Rate = 0x01, /* cc1 lfo1 rate control */
	kMid88SizeCc1Lfo1Pch = 0x01, /* cc1 lfo1 pitch control */
	kMid88SizeCc1Lfo1Tvf = 0x01, /* cc1 lfo1 tvf depth */
	kMid88SizeCc1Lfo1Tva = 0x01, /* cc1 lfo1 tva depth */
	kMid88SizeCc1Lfo2Rate = 0x01, /* cc1 lfo2 rate control */
	kMid88SizeCc1Lfo2Pch = 0x01, /* cc1 lfo2 pitch control */
	kMid88SizeCc1Lfo2Tvf = 0x01, /* cc1 lfo2 tvf depth */
	kMid88SizeCc1Lfo2Tva = 0x01, /* cc1 lfo2 tva depth */

	kMid88SizeCc2Pch = 0x01, /* cc2 pitch control */
	kMid88SizeCc2TvfCutoff = 0x01, /* cc2 tvf cutoff control */
	kMid88SizeCc2Amp = 0x01, /* cc2 amplitude control */
	kMid88SizeCc2Lfo1Rate = 0x01, /* cc2 lfo1 rate control */
	kMid88SizeCc2Lfo1Pch = 0x01, /* cc2 lfo1 pitch control */
	kMid88SizeCc2Lfo1Tvf = 0x01, /* cc2 lfo1 tvf depth */
	kMid88SizeCc2Lfo1Tva = 0x01, /* cc2 lfo1 tva depth */
	kMid88SizeCc2Lfo2Rate = 0x01, /* cc2 lfo2 rate control */
	kMid88SizeCc2Lfo2Pch = 0x01, /* cc2 lfo2 pitch control */
	kMid88SizeCc2Lfo2Tvf = 0x01, /* cc2 lfo2 tvf depth */
	kMid88SizeCc2Lfo2Tva = 0x01, /* cc2 lfo2 tva depth */

	kMid88SizeSysInfo = 0x20, /* system information */

	kMid88SizeToneMapNum = 0x01, /* tone map number */

	kMid88SizeToneMap0Num = 0x01, /* tone map-0 number */

	kMid88SizeEqOnOff = 0x01, /* eq on/off */

	kMid88SizeDrumMapName = 0x0C, /* drum map name */
	kMid88SizePlayNoteNum = 0x01, /* play note number */
	kMid88SizeLvlD = 0x01, /* level */
	kMid88SizeAsgnGrpNum = 0x01, /* assign group number */
	kMid88SizePanpot = 0x01, /* panpot */
	kMid88SizeRevSendLvlD = 0x01, /* reverb send level */
	kMid88SizeChoSendLvlD = 0x01, /* chorus send level */
	kMid88SizeRxNoteOff = 0x01, /* rx.note off */
	kMid88SizeRxNoteOn = 0x01, /* rx.note on */
	kMid88SizeDlySendLvlD = 0x01, /* delay send level */

	/* sysex defaults */
	kMid88SdefSysModeSet = kMid88Mode1, /* system mode note on */

#if 0
	kMid88SdefChMsgRxPort, /* channel msg rx port */

	kMid88SdefVoiceNumReq, /* used voice number */

	kMid88SdefPartPanpotJvc, /* part panpot (jvc) */
	kMid88SdefPanpotJvc, /* panpot (jvc) */

	kMid88SdefUISrcMap, /* source tone# (map) */
	kMid88SdefUISrcBankM, /* source tone# (bank msb) */
	kMid88SdefUISrcPrg, /* source tone# (program) */
#endif
	kMid88SdefUIModify1_2 = 0x40, /* (vibrato rate) */
	kMid88SdefUIModify2_2 = 0x40, /* (vibrato depth) */
	kMid88SdefUIModify3_2 = 0x40, /* (tvf cutoff freq) */
	kMid88SdefUIModify4_2 = 0x40, /* (tvf resonance) */
	kMid88SdefUIModify5_2 = 0x40, /* (tvf&tva env.attack) */
	kMid88SdefUIModify6_2 = 0x40, /* (tvf&tva env.decay) */
	kMid88SdefUIModify7_2 = 0x40, /* (tvf&tva env.release) */
	kMid88SdefUIModify8_2 = 0x40, /* (vibrato delay) */

#if 0
	kMid88SdefUDSetName, /* user drum set name */
	kMid88SdefUDPlayNote, /* play note */
	kMid88SdefUDLevel, /* level */
	kMid88SdefUDAsgnGrp, /* assign group */
	kMid88SdefUDPan, /* pan */
	kMid88SdefUDRevSendLvl, /* reverb send level */
	kMid88SdefUDChoSendLvl, /* chorus send level */
	kMid88SdefUDRxNoteOff, /* rx.note off */
	kMid88SdefUDRxNoteOn, /* rx.note on */
	kMid88SdefUDDlySendLvl, /* delay send level */
	kMid88SdefUDSrcMap, /* source drum set# (map) */
	kMid88SdefUDSrcSet, /* source drum set# (set) */
	kMid88SdefUDSrcNote, /* source note number */
#endif

	kMid88SdefMstTune = 0x0400, /* master tune */
	kMid88SdefMstVol = 0x7F, /* master volume */
	kMid88SdefMstKeyShift = 0x40, /* master key shift */
	kMid88SdefMstPan = 0x40, /* master pan */
	kMid88SdefModeSet = 0x00, /* mode note on */
	
#if 0
	kMid88SdefPatchName "- BISMARK/BSSYNTH  -" /*	patch name */
#endif

	kMid88SdefRevMacro = kMid88RevMacroHall2,
	kMid88SdefRevChara = 0x04, /* reverb character */
	kMid88SdefRevPreLpf = 0x00, /* reverb pre-lpf */
	kMid88SdefRevLvl = 0x40, /* reverb level */
	kMid88SdefRevTime = 0x40, /* reverb time */
	kMid88SdefRevDlyFb = 0x00, /* reverb delay feedback */
	kMid88SdefRevPreDlyTime = 0x00, /* reverb predelay time */
	
	kMid88SdefChoMacro = kMid88ChoMacroChorus3,
	kMid88SdefChoPreLpf = 0x00, /* chorus pre-lpf */
	kMid88SdefChoLvl = 0x40, /* chorus level */
	kMid88SdefChoFb = 0x08, /* chorus feedback */
	kMid88SdefChoDly = 0x50, /* chorus delay */
	kMid88SdefChoRate = 0x03, /* chorus rate */
	kMid88SdefChoDepth = 0x13, /* chorus depth */
	kMid88SdefChoSendLvlToRev = 0x00, /* chorus send level to rev */
	kMid88SdefChoSendLvlToDly = 0x00, /* chorus send level to dly */
	
	kMid88SdefDlyMacro = kMid88DlyMacroDelay1,
	kMid88SdefDlyPreLpf = 0x00, /* delay pre-lpf */
	kMid88SdefDlyTimeC = 0x61, /* delay time center */
	kMid88SdefDlyTimeRatioL = 0x01, /* delay time ratio left */
	kMid88SdefDlyTimeRatioR = 0x01, /* delay time ratio right */
	kMid88SdefDlyLvlC = 0x7F, /* delay level center */
	kMid88SdefDlyLvlL = 0x00, /* delay level left */
	kMid88SdefDlyLvlR = 0x00, /* delay level right */
	kMid88SdefDlyLvl = 0x40, /* delay level */
	kMid88SdefDlyFb = 0x50, /* delay feedback */
	kMid88SdefDlySendLvlToRev = 0x00, /* delay send level to rev */
	
	kMid88SdefEqLowFreq = 0x00, /* eq low freq */
	kMid88SdefEqLowGain = 0x40, /* eq low gain */
	kMid88SdefEqHighFreq = 0x00, /* eq high freq */
	kMid88SdefEqHighGain = 0x40, /* eq high gain */
	
#if 0
	kMid88SdefToneNumber, /* tone number */
	kMid88SdefRxCh, /* rx.channel */
#endif
	kMid88SdefRxPitchBend = kMid88On, /* rx.pitch bend */
	kMid88SdefRxChPress = kMid88On, /* rx.ch pressure (CAf) */
	kMid88SdefRxProgram = kMid88On, /* rx.program change */
	kMid88SdefRxControl = kMid88On, /* rx.control change */
	kMid88SdefRxPolyPress = kMid88On, /* rx.poly pressure (PAf) */
	kMid88SdefRxNoteMsg = kMid88On, /* rx.note message */
	kMid88SdefRxRpn = kMid88On, /* rx.rpn */
	kMid88SdefRxNrpn = kMid88On, /* rx.nrpn */

	kMid88SdefRxModulation = kMid88On, /* rx.modulation */
	kMid88SdefRxVolume = kMid88On, /* rx.volume */
	kMid88SdefRxPanpot = kMid88On, /* rx.panpot */
	kMid88SdefRxExpression = kMid88On, /* rx.expression */
	kMid88SdefRxHold1 = kMid88On, /* rx.hold1 */
	kMid88SdefRxPortamento = kMid88On, /* rx.portamento */
	kMid88SdefRxSostenuto = kMid88On, /* rx.sostenuto */
	kMid88SdefRxSoft = kMid88On, /* rx.soft */

	kMid88SdefMonoPoly = kMid88Poly, /* mono/poly mode */
#if 0
	kMid88SdefAssignMode, /* assign mode */

	kMid88SdefUseForRhyPart, /* use for rhythm part */
#endif

	kMid88SdefPitchKeyShift = 0x40, /* pitch key shift */
	kMid88SdefPitchOffsetFine = 0x80, /* pitch offset fine */

	kMid88SdefPartLvl = kMid88CdefVolume,
	kMid88SdefVeloSnsDepth = 0x40, /* velocity sense depth */
	kMid88SdefVeloSnsOffset = 0x40, /* velocity sense offset */
	kMid88SdefPartPanpot = kMid88CdefPanpot, 
	kMid88SdefKeyRangeLo = 0x00, /* keyboard range low */
	kMid88SdefKeyRangeHi = 0x7F, /* keyboard range high */
	kMid88SdefCc1CtrlNum = 0x10, /* cc1 controller number */
	kMid88SdefCc2CtrlNum = 0x11, /* cc2 controller number */
	kMid88SdefChoSendLvl = kMid88CdefEffect3,
	kMid88SdefRevSendLvl = kMid88CdefEffect1,

	kMid88SdefRxBankSel = kMid88On, /* rx.bank select */
	kMid88SdefRxBankSelL = kMid88On, /* rx.bank select lsb */

	kMid88SdefPchFineTune = kMid88RdefMstFineTune,

	kMid88SdefDlySendLvl = kMid88CdefEffect4,

	kMid88SdefToneModify1 = kMid88NdefVibRate,
	kMid88SdefToneModify2 = kMid88NdefVibDepth,
	kMid88SdefToneModify3 = kMid88NdefTvfCutoffFreq,
	kMid88SdefToneModify4 = kMid88NdefTvfReso,
	kMid88SdefToneModify5 = kMid88NdefEnvAtkTime,
	kMid88SdefToneModify6 = kMid88NdefEnvDcyTime,
	kMid88SdefToneModify7 = kMid88NdefEnvRelTime,
	kMid88SdefToneModify8 = kMid88NdefVibDelay,

	kMid88SdefScaleTune = 0x40, /* scale tuning */

	kMid88SdefModPch = 0x40, /* mod pitch control */
	kMid88SdefModTvfCutoff = 0x40, /* mod tvf cutoff control */
	kMid88SdefModAmp = 0x40, /* mod amplitude control */
	kMid88SdefModLfo1Rate = 0x40, /* mod lfo1 rate control */
	kMid88SdefModLfo1Pch = 0x0A, /* mod lfo1 pitch control */
	kMid88SdefModLfo1Tvf = 0x00, /* mod lfo1 tvf depth */
	kMid88SdefModLfo1Tva = 0x00, /* mod lfo1 tva depth */
	kMid88SdefModLfo2Rate = 0x40, /* mod lfo2 rate control */
	kMid88SdefModLfo2Pch = 0x00, /* mod lfo2 pitch control */
	kMid88SdefModLfo2Tvf = 0x00, /* mod lfo2 tvf depth */
	kMid88SdefModLfo2Tva = 0x00, /* mod lfo2 tva depth */

	kMid88SdefBendPch = 0x42, /* bend pitch control */
	kMid88SdefBendTvfCutoff = 0x40, /* bend tvf cutoff control */
	kMid88SdefBendAmp = 0x40, /* bend amplitude control */
	kMid88SdefBendLfo1Rate = 0x40, /* bend lfo1 rate control */
	kMid88SdefBendLfo1Pch = 0x00, /* bend lfo1 pitch control */
	kMid88SdefBendLfo1Tvf = 0x00, /* bend lfo1 tvf depth */
	kMid88SdefBendLfo1Tva = 0x00, /* bend lfo1 tva depth */
	kMid88SdefBendLfo2Rate = 0x40, /* bend lfo2 rate control */
	kMid88SdefBendLfo2Pch = 0x00, /* bend lfo2 pitch control */
	kMid88SdefBendLfo2Tvf = 0x00, /* bend lfo2 tvf depth */
	kMid88SdefBendLfo2Tva = 0x00, /* bend lfo2 tva depth */

	kMid88SdefCAfPch = 0x40, /* CAf pitch control */
	kMid88SdefCAfTvfCutoff = 0x40, /* CAf tvf cutoff control */
	kMid88SdefCAfAmp = 0x40, /* CAf amplitude control */
	kMid88SdefCAfLfo1Rate = 0x40, /* CAf lfo1 rate control */
	kMid88SdefCAfLfo1Pch = 0x00, /* CAf lfo1 pitch control */
	kMid88SdefCAfLfo1Tvf = 0x00, /* CAf lfo1 tvf depth */
	kMid88SdefCAfLfo1Tva = 0x00, /* CAf lfo1 tva depth */
	kMid88SdefCAfLfo2Rate = 0x40, /* CAf lfo2 rate control */
	kMid88SdefCAfLfo2Pch = 0x00, /* CAf lfo2 pitch control */
	kMid88SdefCAfLfo2Tvf = 0x00, /* CAf lfo2 tvf depth */
	kMid88SdefCAfLfo2Tva = 0x00, /* CAf lfo2 tva depth */

	kMid88SdefPAfPch = 0x40, /* PAf pitch control */
	kMid88SdefPAfTvfCutoff = 0x40, /* PAf tvf cutoff control */
	kMid88SdefPAfAmp = 0x40, /* PAf amplitude control */
	kMid88SdefPAfLfo1Rate = 0x40, /* PAf lfo1 rate control */
	kMid88SdefPAfLfo1Pch = 0x00, /* PAf lfo1 pitch control */
	kMid88SdefPAfLfo1Tvf = 0x00, /* PAf lfo1 tvf depth */
	kMid88SdefPAfLfo1Tva = 0x00, /* PAf lfo1 tva depth */
	kMid88SdefPAfLfo2Rate = 0x40, /* PAf lfo2 rate control */
	kMid88SdefPAfLfo2Pch = 0x00, /* PAf lfo2 pitch control */
	kMid88SdefPAfLfo2Tvf = 0x00, /* PAf lfo2 tvf depth */
	kMid88SdefPAfLfo2Tva = 0x00, /* PAf lfo2 tva depth */

	kMid88SdefCc1Pch = 0x40, /* cc1 pitch control */
	kMid88SdefCc1TvfCutoff = 0x40, /* cc1 tvf cutoff control */
	kMid88SdefCc1Amp = 0x40, /* cc1 amplitude control */
	kMid88SdefCc1Lfo1Rate = 0x40, /* cc1 lfo1 rate control */
	kMid88SdefCc1Lfo1Pch = 0x00, /* cc1 lfo1 pitch control */
	kMid88SdefCc1Lfo1Tvf = 0x00, /* cc1 lfo1 tvf depth */
	kMid88SdefCc1Lfo1Tva = 0x00, /* cc1 lfo1 tva depth */
	kMid88SdefCc1Lfo2Rate = 0x40, /* cc1 lfo2 rate control */
	kMid88SdefCc1Lfo2Pch = 0x00, /* cc1 lfo2 pitch control */
	kMid88SdefCc1Lfo2Tvf = 0x00, /* cc1 lfo2 tvf depth */
	kMid88SdefCc1Lfo2Tva = 0x00, /* cc1 lfo2 tva depth */

	kMid88SdefCc2Pch = 0x40, /* cc2 pitch control */
	kMid88SdefCc2TvfCutoff = 0x40, /* cc2 tvf cutoff control */
	kMid88SdefCc2Amp = 0x40, /* cc2 amplitude control */
	kMid88SdefCc2Lfo1Rate = 0x40, /* cc2 lfo1 rate control */
	kMid88SdefCc2Lfo1Pch = 0x00, /* cc2 lfo1 pitch control */
	kMid88SdefCc2Lfo1Tvf = 0x00, /* cc2 lfo1 tvf depth */
	kMid88SdefCc2Lfo1Tva = 0x00, /* cc2 lfo1 tva depth */
	kMid88SdefCc2Lfo2Rate = 0x40, /* cc2 lfo2 rate control */
	kMid88SdefCc2Lfo2Pch = 0x00, /* cc2 lfo2 pitch control */
	kMid88SdefCc2Lfo2Tvf = 0x00, /* cc2 lfo2 tvf depth */
	kMid88SdefCc2Lfo2Tva = 0x00, /* cc2 lfo2 tva depth */

#if 0
	kMid88SdefSysInfo "GS-64 VER=3.00  BISMARK/BSSYNTH     " /* system information */
#endif

	kMid88SdefToneMapNum = kMid88CdefBankSelL,

	kMid88SdefToneMap0Num = kMid88Sc88Map, /* tone map-0 number */

	kMid88SdefEqOnOff = kMid88On, /* eq on/off */

#if 0
	kMid88SdefDrumMapName, /* drum map name */
	kMid88SdefPlayNoteNum, /* play note number */
	kMid88SdefLvlD, /* level */
	kMid88SdefAsgnGrpNum, /* assign group number */
	kMid88SdefPanpot, /* panpot */
	kMid88SdefRevSendLvlD, /* reverb send level */
	kMid88SdefChoSendLvlD, /* chorus send level */
	kMid88SdefRxNoteOff, /* rx.note off */
	kMid88SdefRxNoteOn, /* rx.note on */
	kMid88SdefDlySendLvlD, /* delay send level */
#endif

	/* sysex minimum values */
	kMid88SminSysModeSet = kMid88Mode1, /* system mode note on */

#if 0
	kMid88SminChMsgRxPort = M_MID_PORTA, /* channel msg rx port */

	kMid88SminVoiceNumReq, /* used voice number */
#endif

	kMid88SminPartPanpotJvc = 0x00, /* part panpot (jvc) */
	kMid88SminPanpotJvc = 0x00, /* panpot (jvc) */

	kMid88SminUISrcMap = kMid88Sc55Map, /* source tone# (map) */
	kMid88SminUISrcBankM = 0x00, /* source tone# (bank msb) */
	kMid88SminUISrcPrg = 0x00, /* source tone# (program) */
	kMid88SminUIModify1_2 = 0x00, /* (vibrato rate) */
	kMid88SminUIModify2_2 = 0x00, /* (vibrato depth) */
	kMid88SminUIModify3_2 = 0x00, /* (tvf cutoff freq) */
	kMid88SminUIModify4_2 = 0x00, /* (tvf resonance) */
	kMid88SminUIModify5_2 = 0x00, /* (tvf&tva env.attack) */
	kMid88SminUIModify6_2 = 0x00, /* (tvf&tva env.decay) */
	kMid88SminUIModify7_2 = 0x00, /* (tvf&tva env.release) */
	kMid88SminUIModify8_2 = 0x00, /* (vibrato delay) */

	kMid88SminUDSetName = 0x20, /* user drum set name */
	kMid88SminUDPlayNote = 0x00, /* play note */
	kMid88SminUDLevel = 0x00, /* level */
	kMid88SminUDAsgnGrp = 0x00, /* assign group */
	kMid88SminUDPan = 0x00, /* pan */
	kMid88SminUDRevSendLvl = 0x00, /* reverb send level */
	kMid88SminUDChoSendLvl = 0x00, /* chorus send level */
	kMid88SminUDRxNoteOff = kMid88Off, /* rx.note off */
	kMid88SminUDRxNoteOn = kMid88Off, /* rx.note on */
	kMid88SminUDDlySendLvl = 0x00, /* delay send level */
	kMid88SminUDSrcMap = kMid88Sc55Map, /* source drum set# (map) */
	kMid88SminUDSrcSet = 0x00, /* source drum set# (set) */
	kMid88SminUDSrcNote = 0x00, /* source note number */

	kMid88SminMstTune = 0x0018, /* master tune */
	kMid88SminMstVol = 0x00, /* master volume */
	kMid88SminMstKeyShift = 0x28, /* master key shift */
	kMid88SminMstPan = 0x01, /* master pan */
	kMid88SminModeSet = 0x00, /* mode note on */

	kMid88SminPatchName = 0x20, /* patch name */

	kMid88SminRevMacro = 0x00, /* reverb macro */
	kMid88SminRevChara = 0x00, /* reverb character */
	kMid88SminRevPreLpf = 0x00, /* reverb pre-lpf */
	kMid88SminRevLvl = 0x00, /* reverb level */
	kMid88SminRevTime = 0x00, /* reverb time */
	kMid88SminRevDlyFb = 0x00, /* reverb delay feedback */
	kMid88SminRevPreDlyTime = 0x00, /* reverb predelay time */

	kMid88SminChoMacro = 0x00, /* chorus macro */
	kMid88SminChoPreLpf = 0x00, /* chorus pre-lpf */
	kMid88SminChoLvl = 0x00, /* chorus level */
	kMid88SminChoFb = 0x00, /* chorus feedback */
	kMid88SminChoDly = 0x00, /* chorus delay */
	kMid88SminChoRate = 0x00, /* chorus rate */
	kMid88SminChoDepth = 0x00, /* chorus depth */
	kMid88SminChoSendLvlToRev = 0x00, /* chorus send level to rev */
	kMid88SminChoSendLvlToDly = 0x00, /* chorus send level to dly */

	kMid88SminDlyMacro = 0x00, /* delay macro */
	kMid88SminDlyPreLpf = 0x00, /* delay pre-lpf */
	kMid88SminDlyTimeC = 0x01, /* delay time center */
	kMid88SminDlyTimeRatioL = 0x01, /* delay time ratio left */
	kMid88SminDlyTimeRatioR = 0x01, /* delay time ratio right */
	kMid88SminDlyLvlC = 0x00, /* delay level center */
	kMid88SminDlyLvlL = 0x00, /* delay level left */
	kMid88SminDlyLvlR = 0x00, /* delay level right */
	kMid88SminDlyLvl = 0x00, /* delay level */
	kMid88SminDlyFb = 0x00, /* delay feedback */
	kMid88SminDlySendLvlToRev = 0x00, /* delay send level to rev */

	kMid88SminEqLowFreq = 0x00, /* eq low freq */
	kMid88SminEqLowGain = 0x34, /* eq low gain */
	kMid88SminEqHighFreq = 0x00, /* eq high freq */
	kMid88SminEqHighGain = 0x34, /* eq high gain */

	kMid88SminToneNumber = 0x00, /* tone number */
	kMid88SminRxCh = 0x00, /* rx.channel */
	kMid88SminRxPitchBend = kMid88Off, /* rx.pitch bend */
	kMid88SminRxChPress = kMid88Off, /* rx.ch pressure (CAf) */
	kMid88SminRxProgram = kMid88Off, /* rx.program change */
	kMid88SminRxControl = kMid88Off, /* rx.control change */
	kMid88SminRxPolyPress = kMid88Off, /* rx.poly pressure (PAf) */
	kMid88SminRxNoteMsg = kMid88Off, /* rx.note message */
	kMid88SminRxRpn = kMid88Off, /* rx.rpn */
	kMid88SminRxNrpn = kMid88Off, /* rx.nrpn */

	kMid88SminRxModulation = kMid88Off, /* rx.modulation */
	kMid88SminRxVolume = kMid88Off, /* rx.volume */
	kMid88SminRxPanpot = kMid88Off, /* rx.panpot */
	kMid88SminRxExpression = kMid88Off, /* rx.expression */
	kMid88SminRxHold1 = kMid88Off, /* rx.hold1 */
	kMid88SminRxPortamento = kMid88Off, /* rx.portamento */
	kMid88SminRxSostenuto = kMid88Off, /* rx.sostenuto */
	kMid88SminRxSoft = kMid88Off, /* rx.soft */

	kMid88SminMonoPoly = kMid88Mono, /* mono/poly mode */
	kMid88SminAssignMode = kMid88Single, /* assign mode */

	kMid88SminUseForRhyPart = kMid88Off, /* use for rhythm part */

	kMid88SminPitchKeyShift = 0x28, /* pitch key shift */
	kMid88SminPitchOffsetFine = 0x08, /* pitch offset fine */

	kMid88SminPartLvl = 0x00, /* part level */
	kMid88SminVeloSnsDepth = 0x00, /* velocity sense depth */
	kMid88SminVeloSnsOffset = 0x00, /* velocity sense offset */
	kMid88SminPartPanpot = 0x00, /* part panpot */
	kMid88SminKeyRangeLo = 0x00, /* keyboard range low */
	kMid88SminKeyRangeHi = 0x00, /* keyboard range high */
	kMid88SminCc1CtrlNum = 0x00, /* cc1 controller number */
	kMid88SminCc2CtrlNum = 0x00, /* cc2 controller number */
	kMid88SminChoSendLvl = 0x00, /* chorus send level */
	kMid88SminRevSendLvl = 0x00, /* reverb send level */

	kMid88SminRxBankSel = kMid88Off, /* rx.bank select */
	kMid88SminRxBankSelL = kMid88Off, /* rx.bank select lsb */

	kMid88SminPchFineTune = 0x0000, /* pitch fine tune */

	kMid88SminDlySendLvl = 0x00, /* delay send level */

	kMid88SminToneModify1 = 0x00, /* (vibrato rate) */
	kMid88SminToneModify2 = 0x00, /* (vibrato depth) */
	kMid88SminToneModify3 = 0x00, /* (tvf cutoff freq) */
	kMid88SminToneModify4 = 0x00, /* (tvf resonance) */
	kMid88SminToneModify5 = 0x00, /* (tvf&tva env.attack) */
	kMid88SminToneModify6 = 0x00, /* (tvf&tva env.decay) */
	kMid88SminToneModify7 = 0x00, /* (tvf&tva env.release) */
	kMid88SminToneModify8 = 0x00, /* (vibrato delay) */

	kMid88SminScaleTune = 0x00, /* scale tuning */

	kMid88SminModPch = 0x28, /* mod pitch control */
	kMid88SminModTvfCutoff = 0x00, /* mod tvf cutoff control */
	kMid88SminModAmp = 0x00, /* mod amplitude control */
	kMid88SminModLfo1Rate = 0x00, /* mod lfo1 rate control */
	kMid88SminModLfo1Pch = 0x00, /* mod lfo1 pitch control */
	kMid88SminModLfo1Tvf = 0x00, /* mod lfo1 tvf depth */
	kMid88SminModLfo1Tva = 0x00, /* mod lfo1 tva depth */
	kMid88SminModLfo2Rate = 0x00, /* mod lfo2 rate control */
	kMid88SminModLfo2Pch = 0x00, /* mod lfo2 pitch control */
	kMid88SminModLfo2Tvf = 0x00, /* mod lfo2 tvf depth */
	kMid88SminModLfo2Tva = 0x00, /* mod lfo2 tva depth */

	kMid88SminBendPch = 0x40, /* bend pitch control */
	kMid88SminBendTvfCutoff = 0x00, /* bend tvf cutoff control */
	kMid88SminBendAmp = 0x00, /* bend amplitude control */
	kMid88SminBendLfo1Rate = 0x00, /* bend lfo1 rate control */
	kMid88SminBendLfo1Pch = 0x00, /* bend lfo1 pitch control */
	kMid88SminBendLfo1Tvf = 0x00, /* bend lfo1 tvf depth */
	kMid88SminBendLfo1Tva = 0x00, /* bend lfo1 tva depth */
	kMid88SminBendLfo2Rate = 0x00, /* bend lfo2 rate control */
	kMid88SminBendLfo2Pch = 0x00, /* bend lfo2 pitch control */
	kMid88SminBendLfo2Tvf = 0x00, /* bend lfo2 tvf depth */
	kMid88SminBendLfo2Tva = 0x00, /* bend lfo2 tva depth */

	kMid88SminCAfPch = 0x28, /* CAf pitch control */
	kMid88SminCAfTvfCutoff = 0x00, /* CAf tvf cutoff control */
	kMid88SminCAfAmp = 0x00, /* CAf amplitude control */
	kMid88SminCAfLfo1Rate = 0x00, /* CAf lfo1 rate control */
	kMid88SminCAfLfo1Pch = 0x00, /* CAf lfo1 pitch control */
	kMid88SminCAfLfo1Tvf = 0x00, /* CAf lfo1 tvf depth */
	kMid88SminCAfLfo1Tva = 0x00, /* CAf lfo1 tva depth */
	kMid88SminCAfLfo2Rate = 0x00, /* CAf lfo2 rate control */
	kMid88SminCAfLfo2Pch = 0x00, /* CAf lfo2 pitch control */
	kMid88SminCAfLfo2Tvf = 0x00, /* CAf lfo2 tvf depth */
	kMid88SminCAfLfo2Tva = 0x00, /* CAf lfo2 tva depth */

	kMid88SminPAfPch = 0x28, /* PAf pitch control */
	kMid88SminPAfTvfCutoff = 0x00, /* PAf tvf cutoff control */
	kMid88SminPAfAmp = 0x00, /* PAf amplitude control */
	kMid88SminPAfLfo1Rate = 0x00, /* PAf lfo1 rate control */
	kMid88SminPAfLfo1Pch = 0x00, /* PAf lfo1 pitch control */
	kMid88SminPAfLfo1Tvf = 0x00, /* PAf lfo1 tvf depth */
	kMid88SminPAfLfo1Tva = 0x00, /* PAf lfo1 tva depth */
	kMid88SminPAfLfo2Rate = 0x00, /* PAf lfo2 rate control */
	kMid88SminPAfLfo2Pch = 0x00, /* PAf lfo2 pitch control */
	kMid88SminPAfLfo2Tvf = 0x00, /* PAf lfo2 tvf depth */
	kMid88SminPAfLfo2Tva = 0x00, /* PAf lfo2 tva depth */

	kMid88SminCc1Pch = 0x28, /* cc1 pitch control */
	kMid88SminCc1TvfCutoff = 0x00, /* cc1 tvf cutoff control */
	kMid88SminCc1Amp = 0x00, /* cc1 amplitude control */
	kMid88SminCc1Lfo1Rate = 0x00, /* cc1 lfo1 rate control */
	kMid88SminCc1Lfo1Pch = 0x00, /* cc1 lfo1 pitch control */
	kMid88SminCc1Lfo1Tvf = 0x00, /* cc1 lfo1 tvf depth */
	kMid88SminCc1Lfo1Tva = 0x00, /* cc1 lfo1 tva depth */
	kMid88SminCc1Lfo2Rate = 0x00, /* cc1 lfo2 rate control */
	kMid88SminCc1Lfo2Pch = 0x00, /* cc1 lfo2 pitch control */
	kMid88SminCc1Lfo2Tvf = 0x00, /* cc1 lfo2 tvf depth */
	kMid88SminCc1Lfo2Tva = 0x00, /* cc1 lfo2 tva depth */

	kMid88SminCc2Pch = 0x28, /* cc2 pitch control */
	kMid88SminCc2TvfCutoff = 0x00, /* cc2 tvf cutoff control */
	kMid88SminCc2Amp = 0x00, /* cc2 amplitude control */
	kMid88SminCc2Lfo1Rate = 0x00, /* cc2 lfo1 rate control */
	kMid88SminCc2Lfo1Pch = 0x00, /* cc2 lfo1 pitch control */
	kMid88SminCc2Lfo1Tvf = 0x00, /* cc2 lfo1 tvf depth */
	kMid88SminCc2Lfo1Tva = 0x00, /* cc2 lfo1 tva depth */
	kMid88SminCc2Lfo2Rate = 0x00, /* cc2 lfo2 rate control */
	kMid88SminCc2Lfo2Pch = 0x00, /* cc2 lfo2 pitch control */
	kMid88SminCc2Lfo2Tvf = 0x00, /* cc2 lfo2 tvf depth */
	kMid88SminCc2Lfo2Tva = 0x00, /* cc2 lfo2 tva depth */

#if 0
	kMid88SminSysInfo, /* system information */
#endif

	kMid88SminToneMapNum = kMid88Selected, /* tone map number */

	kMid88SminToneMap0Num = kMid88Sc55Map, /* tone map-0 number */

	kMid88SminEqOnOff = kMid88Off, /* eq on/off */

	kMid88SminDrumMapName = 0x20, /* drum map name */
	kMid88SminPlayNoteNum = 0x00, /* play note number */
	kMid88SminLvlD = 0x00, /* level */
	kMid88SminAsgnGrpNum = 0x00, /* assign group number */
	kMid88SminPanpot = 0x00, /* panpot */
	kMid88SminRevSendLvlD = 0x00, /* reverb send level */
	kMid88SminChoSendLvlD = 0x00, /* chorus send level */
	kMid88SminRxNoteOff = kMid88Off, /* rx.note off */
	kMid88SminRxNoteOn = kMid88Off, /* rx.note on */
	kMid88SminDlySendLvlD = 0x00, /* delay send level */

	/* sysex maximum values */
	kMid88SmaxSysModeSet = kMid88Mode2, /* system mode note on */

#if 0
	kMid88SmaxChMsgRxPort = BSL_MID_PORT_B, /* channel msg rx port */

	kMid88SmaxVoiceNumReq, /* used voice number */
#endif

	kMid88SmaxPartPanpotJvc = 0x7F, /* part panpot (jvc) */
	kMid88SmaxPanpotJvc = 0x7F, /* panpot (jvc) */

	kMid88SmaxUISrcMap = kMid88Sc88Map, /* source tone# (map) */
	kMid88SmaxUISrcBankM = 0x7F, /* source tone# (bank msb) */
	kMid88SmaxUISrcPrg = 0x7F, /* source tone# (program) */
	kMid88SmaxUIModify1_2 = 0x7F, /* (vibrato rate) */
	kMid88SmaxUIModify2_2 = 0x7F, /* (vibrato depth) */
	kMid88SmaxUIModify3_2 = 0x7F, /* (tvf cutoff freq) */
	kMid88SmaxUIModify4_2 = 0x7F, /* (tvf resonance) */
	kMid88SmaxUIModify5_2 = 0x7F, /* (tvf&tva env.attack) */
	kMid88SmaxUIModify6_2 = 0x7F, /* (tvf&tva env.decay) */
	kMid88SmaxUIModify7_2 = 0x7F, /* (tvf&tva env.release) */
	kMid88SmaxUIModify8_2 = 0x7F, /* (vibrato delay) */

	kMid88SmaxUDSetName = 0x7F, /* user drum set name */
	kMid88SmaxUDPlayNote = 0x7F, /* play note */
	kMid88SmaxUDLevel = 0x7F, /* level */
	kMid88SmaxUDAsgnGrp = 0x7F, /* assign group */
	kMid88SmaxUDPan = 0x7F, /* pan */
	kMid88SmaxUDRevSendLvl = 0x7F, /* reverb send level */
	kMid88SmaxUDChoSendLvl = 0x7F, /* chorus send level */
	kMid88SmaxUDRxNoteOff = kMid88On, /* rx.note off */
	kMid88SmaxUDRxNoteOn = kMid88On, /* rx.note on */
	kMid88SmaxUDDlySendLvl = 0x7F, /* delay send level */
	kMid88SmaxUDSrcMap = kMid88Sc88Map, /* source drum set# (map) */
	kMid88SmaxUDSrcSet = 0x7F, /* source drum set# (set) */
	kMid88SmaxUDSrcNote = 0x7F, /* source note number */

	kMid88SmaxMstTune = 0x07E8, /* master tune */
	kMid88SmaxMstVol = 0x7F, /* master volume */
	kMid88SmaxMstKeyShift = 0x58, /* master key shift */
	kMid88SmaxMstPan = 0x7F, /* master pan */
	kMid88SmaxModeSet = 0x00, /* mode note on */

	kMid88SmaxPatchName = 0x7F, /* patch name */

	kMid88SmaxRevMacro = 0x07, /* reverb macro */
	kMid88SmaxRevChara = 0x07, /* reverb character */
	kMid88SmaxRevPreLpf = 0x07, /* reverb pre-lpf */
	kMid88SmaxRevLvl = 0x7F, /* reverb level */
	kMid88SmaxRevTime = 0x7F, /* reverb time */
	kMid88SmaxRevDlyFb = 0x7F, /* reverb delay feedback */
	kMid88SmaxRevPreDlyTime = 0x7F, /* reverb predelay time */

	kMid88SmaxChoMacro = 0x07, /* chorus macro */
	kMid88SmaxChoPreLpf = 0x07, /* chorus pre-lpf */
	kMid88SmaxChoLvl = 0x7F, /* chorus level */
	kMid88SmaxChoFb = 0x7F, /* chorus feedback */
	kMid88SmaxChoDly = 0x7F, /* chorus delay */
	kMid88SmaxChoRate = 0x7F, /* chorus rate */
	kMid88SmaxChoDepth = 0x7F, /* chorus depth */
	kMid88SmaxChoSendLvlToRev = 0x7F, /* chorus send level to rev */
	kMid88SmaxChoSendLvlToDly = 0x7F, /* chorus send level to dly */

	kMid88SmaxDlyMacro = 0x09, /* delay macro */
	kMid88SmaxDlyPreLpf = 0x07, /* delay pre-lpf */
	kMid88SmaxDlyTimeC = 0x73, /* delay time center */
	kMid88SmaxDlyTimeRatioL = 0x78, /* delay time ratio left */
	kMid88SmaxDlyTimeRatioR = 0x78, /* delay time ratio right */
	kMid88SmaxDlyLvlC = 0x7F, /* delay level center */
	kMid88SmaxDlyLvlL = 0x7F, /* delay level left */
	kMid88SmaxDlyLvlR = 0x7F, /* delay level right */
	kMid88SmaxDlyLvl = 0x7F, /* delay level */
	kMid88SmaxDlyFb = 0x7F, /* delay feedback */
	kMid88SmaxDlySendLvlToRev = 0x7F, /* delay send level to rev */

	kMid88SmaxEqLowFreq = 0x01, /* eq low freq */
	kMid88SmaxEqLowGain = 0x4C, /* eq low gain */
	kMid88SmaxEqHighFreq = 0x01, /* eq high freq */
	kMid88SmaxEqHighGain = 0x4C, /* eq high gain */

	kMid88SmaxToneNumber = 0x7F, /* tone number */
	kMid88SmaxRxCh = 0x10, /* rx.channel */
	kMid88SmaxRxPitchBend = kMid88On, /* rx.pitch bend */
	kMid88SmaxRxChPress = kMid88On, /* rx.ch pressure (CAf) */
	kMid88SmaxRxProgram = kMid88On, /* rx.program change */
	kMid88SmaxRxControl = kMid88On, /* rx.control change */
	kMid88SmaxRxPolyPress = kMid88On, /* rx.poly pressure (PAf) */
	kMid88SmaxRxNoteMsg = kMid88On, /* rx.note message */
	kMid88SmaxRxRpn = kMid88On, /* rx.rpn */
	kMid88SmaxRxNrpn = kMid88On, /* rx.nrpn */

	kMid88SmaxRxModulation = kMid88On, /* rx.modulation */
	kMid88SmaxRxVolume = kMid88On, /* rx.volume */
	kMid88SmaxRxPanpot = kMid88On, /* rx.panpot */
	kMid88SmaxRxExpression = kMid88On, /* rx.expression */
	kMid88SmaxRxHold1 = kMid88On, /* rx.hold1 */
	kMid88SmaxRxPortamento = kMid88On, /* rx.portamento */
	kMid88SmaxRxSostenuto = kMid88On, /* rx.sostenuto */
	kMid88SmaxRxSoft = kMid88On, /* rx.soft */

	kMid88SmaxMonoPoly = kMid88Poly, /* mono/poly mode */
	kMid88SmaxAssignMode = kMid88FullMulti,/* assign mode */

	kMid88SmaxUseForRhyPart = kMid88Map2, /* use for rhythm part */

	kMid88SmaxPitchKeyShift = 0x58, /* pitch key shift */
	kMid88SmaxPitchOffsetFine = 0xF8, /* pitch offset fine */

	kMid88SmaxPartLvl = 0x7F, /* part level */
	kMid88SmaxVeloSnsDepth = 0x7F, /* velocity sense depth */
	kMid88SmaxVeloSnsOffset = 0x7F, /* velocity sense offset */
	kMid88SmaxPartPanpot = 0x7F, /* part panpot */
	kMid88SmaxKeyRangeLo = 0x7F, /* keyboard range low */
	kMid88SmaxKeyRangeHi = 0x7F, /* keyboard range high */
	kMid88SmaxCc1CtrlNum = 0x5F, /* cc1 controller number */
	kMid88SmaxCc2CtrlNum = 0x5F, /* cc2 controller number */
	kMid88SmaxChoSendLvl = 0x7F, /* chorus send level */
	kMid88SmaxRevSendLvl = 0x7F, /* reverb send level */

	kMid88SmaxRxBankSel = kMid88On, /* rx.bank select */
	kMid88SmaxRxBankSelL = kMid88On, /* rx.bank select lsb */

	kMid88SmaxPchFineTune = 0x3FFF, /* pitch fine tune */

	kMid88SmaxDlySendLvl = 0x7F, /* delay send level */

	kMid88SmaxToneModify1 = 0x7F, /* (vibrato rate) */
	kMid88SmaxToneModify2 = 0x7F, /* (vibrato depth) */
	kMid88SmaxToneModify3 = 0x7F, /* (tvf cutoff freq) */
	kMid88SmaxToneModify4 = 0x7F, /* (tvf resonance) */
	kMid88SmaxToneModify5 = 0x7F, /* (tvf&tva env.attack) */
	kMid88SmaxToneModify6 = 0x7F, /* (tvf&tva env.decay) */
	kMid88SmaxToneModify7 = 0x7F, /* (tvf&tva env.release) */
	kMid88SmaxToneModify8 = 0x7F, /* (vibrato delay) */

	kMid88SmaxScaleTune = 0x7F, /* scale tuning */

	kMid88SmaxModPch = 0x58, /* mod pitch control */
	kMid88SmaxModTvfCutoff = 0x7F, /* mod tvf cutoff control */
	kMid88SmaxModAmp = 0x7F, /* mod amplitude control */
	kMid88SmaxModLfo1Rate = 0x7F, /* mod lfo1 rate control */
	kMid88SmaxModLfo1Pch = 0x7F, /* mod lfo1 pitch control */
	kMid88SmaxModLfo1Tvf = 0x7F, /* mod lfo1 tvf depth */
	kMid88SmaxModLfo1Tva = 0x7F, /* mod lfo1 tva depth */
	kMid88SmaxModLfo2Rate = 0x7F, /* mod lfo2 rate control */
	kMid88SmaxModLfo2Pch = 0x7F, /* mod lfo2 pitch control */
	kMid88SmaxModLfo2Tvf = 0x7F, /* mod lfo2 tvf depth */
	kMid88SmaxModLfo2Tva = 0x7F, /* mod lfo2 tva depth */

	kMid88SmaxBendPch = 0x58, /* bend pitch control */
	kMid88SmaxBendTvfCutoff = 0x7F, /* bend tvf cutoff control */
	kMid88SmaxBendAmp = 0x7F, /* bend amplitude control */
	kMid88SmaxBendLfo1Rate = 0x7F, /* bend lfo1 rate control */
	kMid88SmaxBendLfo1Pch = 0x7F, /* bend lfo1 pitch control */
	kMid88SmaxBendLfo1Tvf = 0x7F, /* bend lfo1 tvf depth */
	kMid88SmaxBendLfo1Tva = 0x7F, /* bend lfo1 tva depth */
	kMid88SmaxBendLfo2Rate = 0x7F, /* bend lfo2 rate control */
	kMid88SmaxBendLfo2Pch = 0x7F, /* bend lfo2 pitch control */
	kMid88SmaxBendLfo2Tvf = 0x7F, /* bend lfo2 tvf depth */
	kMid88SmaxBendLfo2Tva = 0x7F, /* bend lfo2 tva depth */

	kMid88SmaxCAfPch = 0x58, /* CAf pitch control */
	kMid88SmaxCAfTvfCutoff = 0x7F, /* CAf tvf cutoff control */
	kMid88SmaxCAfAmp = 0x7F, /* CAf amplitude control */
	kMid88SmaxCAfLfo1Rate = 0x7F, /* CAf lfo1 rate control */
	kMid88SmaxCAfLfo1Pch = 0x7F, /* CAf lfo1 pitch control */
	kMid88SmaxCAfLfo1Tvf = 0x7F, /* CAf lfo1 tvf depth */
	kMid88SmaxCAfLfo1Tva = 0x7F, /* CAf lfo1 tva depth */
	kMid88SmaxCAfLfo2Rate = 0x7F, /* CAf lfo2 rate control */
	kMid88SmaxCAfLfo2Pch = 0x7F, /* CAf lfo2 pitch control */
	kMid88SmaxCAfLfo2Tvf = 0x7F, /* CAf lfo2 tvf depth */
	kMid88SmaxCAfLfo2Tva = 0x7F, /* CAf lfo2 tva depth */

	kMid88SmaxPAfPch = 0x58, /* PAf pitch control */
	kMid88SmaxPAfTvfCutoff = 0x7F, /* PAf tvf cutoff control */
	kMid88SmaxPAfAmp = 0x7F, /* PAf amplitude control */
	kMid88SmaxPAfLfo1Rate = 0x7F, /* PAf lfo1 rate control */
	kMid88SmaxPAfLfo1Pch = 0x7F, /* PAf lfo1 pitch control */
	kMid88SmaxPAfLfo1Tvf = 0x7F, /* PAf lfo1 tvf depth */
	kMid88SmaxPAfLfo1Tva = 0x7F, /* PAf lfo1 tva depth */
	kMid88SmaxPAfLfo2Rate = 0x7F, /* PAf lfo2 rate control */
	kMid88SmaxPAfLfo2Pch = 0x7F, /* PAf lfo2 pitch control */
	kMid88SmaxPAfLfo2Tvf = 0x7F, /* PAf lfo2 tvf depth */
	kMid88SmaxPAfLfo2Tva = 0x7F, /* PAf lfo2 tva depth */

	kMid88SmaxCc1Pch = 0x58, /* cc1 pitch control */
	kMid88SmaxCc1TvfCutoff = 0x7F, /* cc1 tvf cutoff control */
	kMid88SmaxCc1Amp = 0x7F, /* cc1 amplitude control */
	kMid88SmaxCc1Lfo1Rate = 0x7F, /* cc1 lfo1 rate control */
	kMid88SmaxCc1Lfo1Pch = 0x7F, /* cc1 lfo1 pitch control */
	kMid88SmaxCc1Lfo1Tvf = 0x7F, /* cc1 lfo1 tvf depth */
	kMid88SmaxCc1Lfo1Tva = 0x7F, /* cc1 lfo1 tva depth */
	kMid88SmaxCc1Lfo2Rate = 0x7F, /* cc1 lfo2 rate control */
	kMid88SmaxCc1Lfo2Pch = 0x7F, /* cc1 lfo2 pitch control */
	kMid88SmaxCc1Lfo2Tvf = 0x7F, /* cc1 lfo2 tvf depth */
	kMid88SmaxCc1Lfo2Tva = 0x7F, /* cc1 lfo2 tva depth */

	kMid88SmaxCc2Pch = 0x58, /* cc2 pitch control */
	kMid88SmaxCc2TvfCutoff = 0x7F, /* cc2 tvf cutoff control */
	kMid88SmaxCc2Amp = 0x7F, /* cc2 amplitude control */
	kMid88SmaxCc2Lfo1Rate = 0x7F, /* cc2 lfo1 rate control */
	kMid88SmaxCc2Lfo1Pch = 0x7F, /* cc2 lfo1 pitch control */
	kMid88SmaxCc2Lfo1Tvf = 0x7F, /* cc2 lfo1 tvf depth */
	kMid88SmaxCc2Lfo1Tva = 0x7F, /* cc2 lfo1 tva depth */
	kMid88SmaxCc2Lfo2Rate = 0x7F, /* cc2 lfo2 rate control */
	kMid88SmaxCc2Lfo2Pch = 0x7F, /* cc2 lfo2 pitch control */
	kMid88SmaxCc2Lfo2Tvf = 0x7F, /* cc2 lfo2 tvf depth */
	kMid88SmaxCc2Lfo2Tva = 0x7F, /* cc2 lfo2 tva depth */

#if 0
	kMid88SmaxSysInfo, /* system information */
#endif

	kMid88SmaxToneMapNum = kMid88Sc88Map, /* tone map number */

	kMid88SmaxToneMap0Num = kMid88Sc88Map, /* tone map-0 number */

	kMid88SmaxEqOnOff = kMid88On, /* eq on/off */

	kMid88SmaxDrumMapName = 0x7F, /* drum map name */
	kMid88SmaxPlayNoteNum = 0x7F, /* play note number */
	kMid88SmaxLvlD = 0x7F, /* level */
	kMid88SmaxAsgnGrpNum = 0x7F, /* assign group number */
	kMid88SmaxPanpot = 0x7F, /* panpot */
	kMid88SmaxRevSendLvlD = 0x7F, /* reverb send level */
	kMid88SmaxChoSendLvlD = 0x7F, /* chorus send level */
	kMid88SmaxRxNoteOff = kMid88On, /* rx.note off */
	kMid88SmaxRxNoteOn = kMid88On, /* rx.note on */
	kMid88SmaxDlySendLvlD = 0x7F, /* delay send level */
};
 /* user inst/drum */
#ifdef M_MID_88_USER_INIT
#define M_MID_88_USER_NONE 0
#define M_MID_88_USER_USED 1
#endif /* M_MID_88_USER_INIT */

/* locals */

#ifdef M_MID_88_USER_INIT
#ifdef __mid88_c
const BYTE byMid88UserDrum[24][138]={
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x00, 0x00, /* [0] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x44, 0x3C, 0x3C, 0x3C, 0x42, 
		0x3E, 0x3C, 0x44, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x3D, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x3F, 0x3A, 0x3C, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x3C, 0x44, 0x3F, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x6E, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x01, 0x00, /* [1] */
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x66, 0x72, 0x4F, 0x6B, 0x57, 0x5B, 0x73, 
		0x7F, 0x67, 0x67, 0x67, 0x5C, 0x7F, 0x7F, 0x75, 
		0x7F, 0x74, 0x77, 0x74, 0x5A, 0x74, 0x7D, 0x74, 
		0x74, 0x7F, 0x74, 0x70, 0x6F, 0x63, 0x77, 0x55, 
		0x74, 0x6F, 0x68, 0x69, 0x64, 0x5E, 0x5D, 0x54, 
		0x72, 0x7F, 0x7F, 0x5B, 0x5B, 0x5A, 0x6B, 0x4F, 
		0x53, 0x6B, 0x6F, 0x6E, 0x6B, 0x6B, 0x53, 0x57, 
		0x5F, 0x5F, 0x78, 0x77, 0x7B, 0x7B, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x2E, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x02, 0x00, /* [2] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
		0x02, 0x03, 0x03, 0x00, 0x00, 0x00, 0x04, 0x04, 
		0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x1C, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x03, 0x00, /* [3] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x31, 0x31, 0x36, 0x36, 0x40, 
		0x36, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x36, 
		0x40, 0x22, 0x54, 0x2E, 0x54, 0x3A, 0x54, 0x46, 
		0x52, 0x54, 0x5E, 0x2C, 0x2C, 0x2C, 0x4A, 0x36, 
		0x54, 0x2C, 0x1D, 0x2C, 0x63, 0x63, 0x27, 0x27, 
		0x2C, 0x54, 0x54, 0x1D, 0x1D, 0x1D, 0x18, 0x63, 
		0x63, 0x5E, 0x5E, 0x54, 0x63, 0x63, 0x2C, 0x2C, 
		0x18, 0x18, 0x5E, 0x63, 0x68, 0x22, 0x2C, 0x2C, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x1F, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x04, 0x00, /* [4] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x32, 0x4B, 0x7F, 0x7F, 0x3F, 0x3F, 0x3F, 
		0x00, 0x3F, 0x3F, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x1F, 0x7F, 0x20, 0x7F, 0x1F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x7F, 
		0x3F, 0x7F, 0x7F, 0x7F, 0x5F, 0x5F, 0x7F, 0x7F, 
		0x5F, 0x7F, 0x7F, 0x64, 0x64, 0x3F, 0x3F, 0x7F, 
		0x7F, 0x3F, 0x3F, 0x5F, 0x5F, 0x5F, 0x7F, 0x7F, 
		0x5F, 0x7F, 0x3F, 0x7F, 0x7F, 0x5F, 0x5F, 0x5F, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x25, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x05, 0x00, /* [5] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x52, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x06, 0x00, /* [6] */
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x11, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x50, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x07, 0x00, /* [7] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x50, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x08, 0x00, /* [8] */
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x4F, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x09, 0x00, /* [9] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x4E, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x0A, 0x00, /* [10] */
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 
		0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 
		0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 
		0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 
		0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 
		0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 
		0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 
		0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 
		0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 
		0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 
		0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 
		0x0D, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x0B, 0x00, /* [11] */
		0x53, 0x54, 0x41, 0x4E, 0x44, 0x41, 0x52, 0x44, 
		0x20, 0x31, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 
		0x6A, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x10, 0x00, /* [12] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x3C, 0x30, 0x3C, 0x34, 0x3C, 0x37, 0x3C, 0x3B, 
		0x3E, 0x3C, 0x42, 0x3C, 0x3C, 0x3C, 0x3C, 0x45, 
		0x3C, 0x3D, 0x3C, 0x3D, 0x3C, 0x3C, 0x3C, 0x41, 
		0x3C, 0x3D, 0x38, 0x41, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x3C, 0x44, 0x3F, 0x3C, 0x3C, 
		0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x70, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x11, 0x00, /* [13] */
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x4F, 0x6B, 0x57, 0x5B, 0x73, 
		0x7F, 0x67, 0x67, 0x7F, 0x7F, 0x7F, 0x7F, 0x63, 
		0x7F, 0x7F, 0x7B, 0x7F, 0x57, 0x7F, 0x77, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x78, 0x6F, 0x63, 0x77, 0x53, 
		0x73, 0x7F, 0x69, 0x78, 0x7F, 0x7F, 0x63, 0x6B, 
		0x7B, 0x63, 0x63, 0x63, 0x63, 0x5F, 0x69, 0x4F, 
		0x53, 0x6B, 0x6F, 0x6E, 0x6B, 0x6B, 0x53, 0x57, 
		0x5F, 0x5F, 0x7B, 0x77, 0x7B, 0x7B, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
		0x2D, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x12, 0x00, /* [14] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 
		0x02, 0x03, 0x03, 0x00, 0x00, 0x00, 0x04, 0x04, 
		0x05, 0x05, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x0C, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x13, 0x00, /* [15] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x31, 0x31, 0x36, 0x36, 0x40, 
		0x36, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x36, 
		0x40, 0x22, 0x54, 0x2E, 0x54, 0x3A, 0x54, 0x46, 
		0x52, 0x54, 0x5E, 0x2C, 0x2C, 0x2C, 0x4A, 0x36, 
		0x54, 0x2C, 0x1D, 0x2C, 0x63, 0x63, 0x27, 0x27, 
		0x2C, 0x54, 0x54, 0x1D, 0x1D, 0x1D, 0x18, 0x63, 
		0x63, 0x5E, 0x5E, 0x54, 0x63, 0x63, 0x2C, 0x2C, 
		0x18, 0x18, 0x5E, 0x63, 0x68, 0x22, 0x2C, 0x2C, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x0F, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x14, 0x00, /* [16] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x7F, 0x7F, 0x3F, 0x3F, 0x3F, 
		0x00, 0x3F, 0x3F, 0x20, 0x20, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x1F, 0x7F, 0x20, 0x7F, 0x1F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x7F, 
		0x3F, 0x7F, 0x7F, 0x7F, 0x5F, 0x5F, 0x7F, 0x7F, 
		0x5F, 0x7F, 0x7F, 0x64, 0x64, 0x3F, 0x3F, 0x7F, 
		0x7F, 0x3F, 0x3F, 0x5F, 0x5F, 0x5F, 0x7F, 0x7F, 
		0x5F, 0x7F, 0x3F, 0x7F, 0x7F, 0x5F, 0x5F, 0x5F, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x52, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x15, 0x00, /* [17] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x7F, 0x7F, 0x3F, 0x3F, 0x3F, 
		0x00, 0x3F, 0x3F, 0x20, 0x20, 0x7F, 0x7F, 0x7F, 
		0x7F, 0x7F, 0x1F, 0x7F, 0x20, 0x7F, 0x1F, 0x7F, 
		0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x3F, 0x7F, 
		0x3F, 0x7F, 0x7F, 0x7F, 0x5F, 0x5F, 0x7F, 0x7F, 
		0x5F, 0x7F, 0x7F, 0x64, 0x64, 0x3F, 0x3F, 0x7F, 
		0x7F, 0x3F, 0x3F, 0x5F, 0x5F, 0x5F, 0x7F, 0x7F, 
		0x5F, 0x7F, 0x3F, 0x7F, 0x7F, 0x5F, 0x5F, 0x5F, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x51, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x16, 0x00, /* [18] */
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 
		0x41, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x17, 0x00, /* [19] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x40, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x18, 0x00, /* [20] */
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x3F, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x19, 0x00, /* [21] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x3E, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x1A, 0x00, /* [22] */
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 
		0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 
		0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 
		0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 
		0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 
		0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 
		0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 
		0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 
		0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 
		0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 
		0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 
		0x7D, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x29, 0x1B, 0x00, /* [23] */
		0x53, 0x54, 0x41, 0x4E, 0x44, 0x41, 0x52, 0x44, 
		0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 
		0x6B, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00
	}
};

const BYTE byMid88UserInst[22][138]={
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x00, 0x00, /* [0] */
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 
		0x58, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x01, 0x00, /* [1] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x57, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x02, 0x00, /* [2] */
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 
		0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 
		0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 
		0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 
		0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 
		0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 
		0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 
		0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 
		0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 
		0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 
		0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 
		0x16, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x03, 0x00, /* [3] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x55, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x04, 0x00, /* [4] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x54, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x05, 0x00, /* [5] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x53, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x06, 0x00, /* [6] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x52, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x07, 0x00, /* [7] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x51, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x08, 0x00, /* [8] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x50, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x09, 0x00, /* [9] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x4F, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x0A, 0x00, /* [10] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x4E, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x10, 0x00, /* [11] */
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
		0x48, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x11, 0x00, /* [12] */
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x47, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x12, 0x00, /* [13] */
		0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 
		0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 
		0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 
		0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 
		0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 
		0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 
		0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 
		0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 
		0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 
		0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 
		0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 
		0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 
		0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 
		0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 
		0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F, 
		0x06, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x13, 0x00, /* [14] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x45, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x14, 0x00, /* [15] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x44, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x15, 0x00, /* [16] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x43, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x16, 0x00, /* [17] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x42, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x17, 0x00, /* [18] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x41, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x18, 0x00, /* [19] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x19, 0x00, /* [20] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x3F, 0xF7
	}, 
	{
		0xF0, 0x41, 0x10, 0x42, 0x12, 0x28, 0x1A, 0x00, /* [21] */
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 
		0x3E, 0xF7
	}
};

#endif /* __mid88_c */
#endif /* M_MID_88_USER_INIT */

#endif /* __INCmid88h */
